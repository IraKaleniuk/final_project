{
  "parser": "@babel/eslint-parser",
  "env": {
    "browser": true,
    "mocha": true
  },
  "extends": ["standard", "react-app", "airbnb", "airbnb/hooks"],
  "rules": {
    "no-trailing-spaces": ["error", { "skipBlankLines": true }],//проверяет наличие пробелов в конце строк,по настройке будет игнорить их
    "no-return-assign": 0,//проверяет, содержит ли выражение присваивание (=) внутри return(правило отключено)
    "eol-last": 0,//определяет, должна ли в конце файла быть пустая строка(правило отключено)
    "semi": "warn",//определяет, должны ли в JavaScript-коде использоваться точки с запятой(будет выдавать предупреждение) 
    "camelcase": 0,//отвечает за стиль именования переменных(правило отключено)
    "object-curly-spacing": 0,//отвечает за пробелы внутри фигурных скобок объектов(правило отключено)
    "comma-dangle": 0, //отвечает за наличие или отсутствие запятой после последнего элемента в массивах(правило отключено)
    "quotes": ["warn", "double"],//используем только двойные кавычки, на одинарные будет выдавать ошибки
    "linebreak-style": ["error", "windows"],//в винде используеться формат переноса строки(CRLF),а ESLint автоматом ожидает(LF),настройка показывает наш формат 
    "no-multiple-empty-lines": ["error", { "max": 2 }],//определяет, сколько пустых строк допускается между строками кода
    "react/jsx-wrap-multilines": "off",//определяет, как должны быть расположены скобки вокруг JSX-выражений(правило отключено)
    "react/jsx-no-useless-fragment": "off",//определяет, требуется ли использование фрагментов (Fragment) в JSX, когда они содержат только один дочерний элемент(правило отключено)
    "react/react-in-jsx-scope": "off",//это правило гарантирует, что идентификатор 'React' доступен в области видимости(то есть ипортирован)при использовании JSX(если написать"error" активируем это правило)
    "indent": "off",//правило на количество пробелов отступа,можно было указать так ["error", 2],но в коде есть и 2 и 4 отступа(правило отключено)
    "react/jsx-indent": "off",//правило отвечает за проверку отступов в JSX-коде(правило отключено)
    "react/jsx-tag-spacing": ["error", {
      "beforeClosing": "always"
    }],//требует пробел перед закрывающей скобкой в JSX,если указать"react/jsx-tag-spacing": "off" отключим это правило
    "no-extra-semi": "warn",//предупреждает о лишних точках с запятой,указан "warn" в место "error",чтобы выдавало предупреждение
    "prefer-const": "warn",//проверяеть код и рекомендует использовать const вместо let для переменных, которые не изменяются
    "no-multi-spaces": "off",//правило на выдование ошибок при множественных пробелов(правило отключено)
    "space-in-parens": ["error", "always"],//пробелы внутри скобок должны быть обязательными
    "react/function-component-definition": "off",//проверка на неявного определения компонентов через присваивание(правило отключено)
    "arrow-body-style": "off",//проверка требует перемещения возвращаемого значения сразу после '=>' (правило отключено)
    "react/jsx-filename-extension": "off",//использование JSX в файлах с расширением .js не допускается(правило отключено)
    "import/order": "off"//импорт модулей должен быть организован в определенном порядке(правило отключено)
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "propWrapperFunctions": ["forbidExtraProps"]
  }
}
